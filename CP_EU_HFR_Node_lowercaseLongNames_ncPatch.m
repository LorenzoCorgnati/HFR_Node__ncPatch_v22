%% CP_EU_HFR_Node_lowercaseLongNames_ncPatch.m
% This application patches all the radial and total netCDF generated by the
% EU HFR Node (up to May 2020) for correcting variable long names in order
% to comply with the CMEMS-INSTAC requirement asking for variable long
% names with all words but the first starting with a lower case.

% Author: Lorenzo Corgnati
% Date: May 22, 2020

% E-mail: lorenzo.corgnati@sp.ismar.cnr.it
%%

%% Setup

warning('off', 'all');

clear all
close all
clc

% Set the format version
format_version = 'v2.2';

% Setup the standard netCDF datafile folder
% EHNfolder = '/home/radarcombine/EU_HFR_NODE/HFR_*';
% EHNfolder = '/mnt/data/CNR/RADAR/DATI/Dati_HFR_*';
EHNfolder = '/home/lorenz/Desktop/netCDF_check/v2.2/HFR_*';

EHNlc_err = 0;

disp(['[' datestr(now) '] - - ' 'CP_EU_HFR_Node_lowercaseLongNames_ncPatch started.']);

%%

try
    %% List the netCDF files to be patched
    
    ncFiles = rdir([EHNfolder filesep '**' filesep '*_nc' filesep '**' filesep format_version filesep '**' filesep '*.nc']);
    disp(['[' datestr(now) '] - - ' 'File list retrieved (' num2str(length(ncFiles)) ' files to be patched).']);
    procStatus = zeros(length(ncFiles),1);
    
    %%
    
    %% Apply the patch to the variable long names
    for nc_idx=1:length(ncFiles)
        try
            % Check if the file was already patched
            deprecated = ncreadatt(ncFiles(nc_idx).name,'/','institution_reference');
            
            % Retrieve manufacturer info
            sensorATT = ncreadatt(ncFiles(nc_idx).name,'/','sensor');
            % Retrieve site code
            siteCODE = ncreadatt(ncFiles(nc_idx).name,'/','site_code');
            % Retrieve platform code
            platformCODE = ncreadatt(ncFiles(nc_idx).name,'/','platform_code');
            
            % Check if the nc file is a radial or total data file
            if(contains(ncFiles(nc_idx).folder,'Totals_nc'))
                ncwriteatt(ncFiles(nc_idx).name,'TIME','long_name',char('Time'));
                ncwriteatt(ncFiles(nc_idx).name,'TIME','calendar',char('standard'));
                ncwriteatt(ncFiles(nc_idx).name,'TIME','valid_min',double(-90000));
                ncwriteatt(ncFiles(nc_idx).name,'TIME','valid_max',double(90000));
                ncwriteatt(ncFiles(nc_idx).name,'TIME','uncertainty',char(''));
                ncwriteatt(ncFiles(nc_idx).name,'LATITUDE','long_name',char('Latitude of each location'));
                ncwriteatt(ncFiles(nc_idx).name,'LATITUDE','valid_min',single(-90));
                ncwriteatt(ncFiles(nc_idx).name,'LATITUDE','valid_max',single(90));
                ncwriteatt(ncFiles(nc_idx).name,'LATITUDE','uncertainty',char(''));
                ncwriteatt(ncFiles(nc_idx).name,'LONGITUDE','long_name',char('Longitude of each location'));
                ncwriteatt(ncFiles(nc_idx).name,'LONGITUDE','valid_min',single(-180));
                ncwriteatt(ncFiles(nc_idx).name,'LONGITUDE','valid_max',single(180));
                ncwriteatt(ncFiles(nc_idx).name,'LONGITUDE','uncertainty',char(''));
                ncwriteatt(ncFiles(nc_idx).name,'DEPH','long_name',char('Depth'));
                %                 ncwriteatt(ncFiles(nc_idx).name,'DEPH','FillValue',netcdf.getConstant('NC_FILL_FLOAT'));
                ncwriteatt(ncFiles(nc_idx).name,'DEPH','valid_min',single(-12000));
                ncwriteatt(ncFiles(nc_idx).name,'DEPH','valid_max',single(12000));
                ncwriteatt(ncFiles(nc_idx).name,'DEPH','uncertainty',char(''));
                ncwriteatt(ncFiles(nc_idx).name,'DEPH','data_mode',char('R'));
                ncwriteatt(ncFiles(nc_idx).name,'EWCT','long_name',char('West-east current component'));
                ncwriteatt(ncFiles(nc_idx).name,'EWCT','coordinates',char('TIME DEPH LATITUDE LONGITUDE'));
                ncwriteatt(ncFiles(nc_idx).name,'EWCT','data_mode',char('R'));
                ncwriteatt(ncFiles(nc_idx).name,'NSCT','long_name',char('South-north current component'));
                ncwriteatt(ncFiles(nc_idx).name,'NSCT','coordinates',char('TIME DEPH LATITUDE LONGITUDE'));
                ncwriteatt(ncFiles(nc_idx).name,'NSCT','data_mode',char('R'));
                ncwriteatt(ncFiles(nc_idx).name,'EWCS','long_name',char('Standard deviation of surface eastward sea water velocity'));
                ncwriteatt(ncFiles(nc_idx).name,'EWCS','standard_name',char(''));
                ncwriteatt(ncFiles(nc_idx).name,'EWCS','coordinates',char('TIME DEPH LATITUDE LONGITUDE'));
                ncwriteatt(ncFiles(nc_idx).name,'EWCS','data_mode',char('R'));
                ncwriteatt(ncFiles(nc_idx).name,'NSCS','long_name',char('Standard deviation of surface northward sea water velocity'));
                ncwriteatt(ncFiles(nc_idx).name,'NSCS','standard_name',char(''));
                ncwriteatt(ncFiles(nc_idx).name,'NSCS','coordinates',char('TIME DEPH LATITUDE LONGITUDE'));
                ncwriteatt(ncFiles(nc_idx).name,'NSCS','data_mode',char('R'));
                if(~contains(siteCODE,'HFR-US','IgnoreCase',true))
                    if(contains(sensorATT,'wera','IgnoreCase',true))
                        ncwriteatt(ncFiles(nc_idx).name,'UACC','long_name',char('Accuracy of surface eastward sea water velocity'));
                        ncwriteatt(ncFiles(nc_idx).name,'UACC','standard_name',char(''));
                        ncwriteatt(ncFiles(nc_idx).name,'UACC','coordinates',char('TIME DEPH LATITUDE LONGITUDE'));
                        ncwriteatt(ncFiles(nc_idx).name,'UACC','data_mode',char('R'));
                        ncwriteatt(ncFiles(nc_idx).name,'VACC','long_name',char('Accuracy of surface northward sea water velocity'));
                        ncwriteatt(ncFiles(nc_idx).name,'VACC','standard_name',char(''));
                        ncwriteatt(ncFiles(nc_idx).name,'VACC','coordinates',char('TIME DEPH LATITUDE LONGITUDE'));
                        ncwriteatt(ncFiles(nc_idx).name,'VACC','data_mode',char('R'));
                    elseif(contains(sensorATT,'codar','IgnoreCase',true))
                        ncwriteatt(ncFiles(nc_idx).name,'CCOV','long_name',char('Covariance of surface sea water velocity'));
                        ncwriteatt(ncFiles(nc_idx).name,'CCOV','standard_name',char(''));
                        ncwriteatt(ncFiles(nc_idx).name,'CCOV','coordinates',char('TIME DEPH LATITUDE LONGITUDE'));
                        ncwriteatt(ncFiles(nc_idx).name,'CCOV','data_mode',char('R'));
                    end
                end
                ncwriteatt(ncFiles(nc_idx).name,'GDOP','long_name',char('Geometrical dilution of precision'));
                ncwriteatt(ncFiles(nc_idx).name,'GDOP','standard_name',char(''));
                ncwriteatt(ncFiles(nc_idx).name,'GDOP','coordinates',char('TIME DEPH LATITUDE LONGITUDE'));
                ncwriteatt(ncFiles(nc_idx).name,'GDOP','data_mode',char('R'));
                ncwriteatt(ncFiles(nc_idx).name,'TIME_QC','long_name',char('Time quality flag'));
                ncwriteatt(ncFiles(nc_idx).name,'TIME_QC','conventions',char('Copernicus Marine In Situ reference table 2'));
                ncwriteatt(ncFiles(nc_idx).name,'POSITION_QC','long_name',char('Position quality flag'));
                ncwriteatt(ncFiles(nc_idx).name,'POSITION_QC','conventions',char('Copernicus Marine In Situ reference table 2'));
                ncwriteatt(ncFiles(nc_idx).name,'DEPH_QC','long_name',char('Depth quality flag'));
                ncwriteatt(ncFiles(nc_idx).name,'DEPH_QC','conventions',char('Copernicus Marine In Situ reference table 2'));
                ncwriteatt(ncFiles(nc_idx).name,'QCflag','long_name',char('Overall quality flag'));
                ncwriteatt(ncFiles(nc_idx).name,'QCflag','conventions',char('Copernicus Marine In Situ reference table 2'));
                ncwriteatt(ncFiles(nc_idx).name,'VART_QC','long_name',char('Variance threshold quality flag'));
                ncwriteatt(ncFiles(nc_idx).name,'VART_QC','conventions',char('Copernicus Marine In Situ reference table 2'));
                ncwriteatt(ncFiles(nc_idx).name,'GDOP_QC','long_name',char('GDOP threshold quality flag'));
                ncwriteatt(ncFiles(nc_idx).name,'GDOP_QC','conventions',char('Copernicus Marine In Situ reference table 2'));
                ncwriteatt(ncFiles(nc_idx).name,'DDNS_QC','long_name',char('Data density threshold quality flag'));
                ncwriteatt(ncFiles(nc_idx).name,'DDNS_QC','conventions',char('Copernicus Marine In Situ reference table 2'));
                ncwriteatt(ncFiles(nc_idx).name,'CSPD_QC','long_name',char('Velocity threshold quality flag'));
                ncwriteatt(ncFiles(nc_idx).name,'CSPD_QC','conventions',char('Copernicus Marine In Situ reference table 2'));
                ncwriteatt(ncFiles(nc_idx).name,'NARX','long_name',char('Number of receive antennas'));
                ncwriteatt(ncFiles(nc_idx).name,'NARX','standard_name',char(''));
                ncwriteatt(ncFiles(nc_idx).name,'NARX','valid_max',int8(127));
                ncwriteatt(ncFiles(nc_idx).name,'NARX','data_mode',char('R'));
                ncwriteatt(ncFiles(nc_idx).name,'NATX','long_name',char('Number of transmit antennas'));
                ncwriteatt(ncFiles(nc_idx).name,'NATX','standard_name',char(''));
                ncwriteatt(ncFiles(nc_idx).name,'NATX','valid_max',int8(128));
                ncwriteatt(ncFiles(nc_idx).name,'NATX','data_mode',char('R'));
                ncwriteatt(ncFiles(nc_idx).name,'SLTR','long_name',char('Receive antenna latitudes'));
                ncwriteatt(ncFiles(nc_idx).name,'SLTR','standard_name',char('latitude'));
                ncwriteatt(ncFiles(nc_idx).name,'SLTR','data_mode',char('R'));
                ncwriteatt(ncFiles(nc_idx).name,'SLNR','long_name',char('Receive antenna longitudes'));
                ncwriteatt(ncFiles(nc_idx).name,'SLNR','standard_name',char('longitude'));
                ncwriteatt(ncFiles(nc_idx).name,'SLNR','data_mode',char('R'));
                ncwriteatt(ncFiles(nc_idx).name,'SLTT','long_name',char('Transmit antenna latitudes'));
                ncwriteatt(ncFiles(nc_idx).name,'SLTT','standard_name',char('latitude'));
                ncwriteatt(ncFiles(nc_idx).name,'SLTT','data_mode',char('R'));
                ncwriteatt(ncFiles(nc_idx).name,'SLNT','long_name',char('Transmit antenna longitudes'));
                ncwriteatt(ncFiles(nc_idx).name,'SLNT','standard_name',char('longitude'));
                ncwriteatt(ncFiles(nc_idx).name,'SLNT','data_mode',char('R'));
                ncwriteatt(ncFiles(nc_idx).name,'SCDR','long_name',char('Receive antenna codes'));
                ncwriteatt(ncFiles(nc_idx).name,'SCDR','standard_name',char(''));
                ncwriteatt(ncFiles(nc_idx).name,'SCDR','data_mode',char('R'));
                ncwriteatt(ncFiles(nc_idx).name,'SCDT','long_name',char('Transmit antenna codes'));
                ncwriteatt(ncFiles(nc_idx).name,'SCDT','standard_name',char(''));
                ncwriteatt(ncFiles(nc_idx).name,'SCDT','data_mode',char('R'));
            elseif(contains(ncFiles(nc_idx).folder,'Radials_nc'))
                ncwriteatt(ncFiles(nc_idx).name,'TIME','long_name',char('Time'));
                ncwriteatt(ncFiles(nc_idx).name,'TIME','calendar',char('standard'));
                ncwriteatt(ncFiles(nc_idx).name,'TIME','valid_min',double(-90000));
                ncwriteatt(ncFiles(nc_idx).name,'TIME','valid_max',double(90000));
                ncwriteatt(ncFiles(nc_idx).name,'TIME','uncertainty',char(''));
                ncwriteatt(ncFiles(nc_idx).name,'LATITUDE','long_name',char('Latitude of each location'));
                ncwriteatt(ncFiles(nc_idx).name,'LATITUDE','valid_min',single(-90));
                ncwriteatt(ncFiles(nc_idx).name,'LATITUDE','valid_max',single(90));
                ncwriteatt(ncFiles(nc_idx).name,'LATITUDE','uncertainty',char(''));
                ncwriteatt(ncFiles(nc_idx).name,'LONGITUDE','long_name',char('Longitude of each location'));
                ncwriteatt(ncFiles(nc_idx).name,'LONGITUDE','valid_min',single(-180));
                ncwriteatt(ncFiles(nc_idx).name,'LONGITUDE','valid_max',single(180));
                ncwriteatt(ncFiles(nc_idx).name,'LONGITUDE','uncertainty',char(''));
                if(contains(sensorATT,'codar','IgnoreCase',true))
                    ncwriteatt(ncFiles(nc_idx).name,'BEAR','long_name',char('Bearing away from instrument'));
                    ncwriteatt(ncFiles(nc_idx).name,'BEAR','standard_name',char(''));
                    ncwriteatt(ncFiles(nc_idx).name,'BEAR','valid_min',single(0));
                    ncwriteatt(ncFiles(nc_idx).name,'BEAR','valid_max',single(360));
                    ncwriteatt(ncFiles(nc_idx).name,'BEAR','uncertainty',char(''));
                    ncwriteatt(ncFiles(nc_idx).name,'RNGE','long_name',char('Range away from instrument'));
                    ncwriteatt(ncFiles(nc_idx).name,'RNGE','standard_name',char(''));
                    ncwriteatt(ncFiles(nc_idx).name,'RNGE','valid_min',single(0));
                    ncwriteatt(ncFiles(nc_idx).name,'RNGE','valid_max',single(90000));
                    ncwriteatt(ncFiles(nc_idx).name,'RNGE','uncertainty',char(''));
                end
                ncwriteatt(ncFiles(nc_idx).name,'DEPH','long_name',char('Depth'));
                %                 ncwriteatt(ncFiles(nc_idx).name,'DEPH','FillValue',netcdf.getConstant('NC_FILL_FLOAT'));
                ncwriteatt(ncFiles(nc_idx).name,'DEPH','valid_min',single(-12000));
                ncwriteatt(ncFiles(nc_idx).name,'DEPH','valid_max',single(12000));
                ncwriteatt(ncFiles(nc_idx).name,'DEPH','uncertainty',char(''));
                ncwriteatt(ncFiles(nc_idx).name,'DEPH','data_mode',char('R'));
                ncwriteatt(ncFiles(nc_idx).name,'RDVA','long_name',char('Radial sea water velocity away from instrument'));
                ncwriteatt(ncFiles(nc_idx).name,'RDVA','ancillary_variables',char('QCflag, OWTR_QC, MDFL_QC, CSPD_QC, VART_QC, RDCT_QC'));
                ncwriteatt(ncFiles(nc_idx).name,'RDVA','coordinates',char('TIME DEPH LATITUDE LONGITUDE'));
                ncwriteatt(ncFiles(nc_idx).name,'RDVA','sdn_parameter_name',char('Speed of water current (Eulerian measurement) in the water body by directional range-gated radar'));
                ncwriteatt(ncFiles(nc_idx).name,'RDVA','data_mode',char('R'));
                ncwriteatt(ncFiles(nc_idx).name,'DRVA','long_name',char('Direction of radial vector away from instrument'));
                ncwriteatt(ncFiles(nc_idx).name,'DRVA','ancillary_variables',char('QCflag, OWTR_QC, MDFL_QC, AVRB_QC, RDCT_QC'));
                ncwriteatt(ncFiles(nc_idx).name,'DRVA','coordinates',char('TIME DEPH LATITUDE LONGITUDE'));
                ncwriteatt(ncFiles(nc_idx).name,'DRVA','units',char('degree_true'));
                ncwriteatt(ncFiles(nc_idx).name,'DRVA','sdn_parameter_name',char('Direction (towards) of water current (Eulerian measurement) in the water body by directional range-gated radar'));
                ncwriteatt(ncFiles(nc_idx).name,'DRVA','data_mode',char('R'));
                ncwriteatt(ncFiles(nc_idx).name,'EWCT','long_name',char('West-east current component'));
                ncwriteatt(ncFiles(nc_idx).name,'EWCT','coordinates',char('TIME DEPH LATITUDE LONGITUDE'));
                ncwriteatt(ncFiles(nc_idx).name,'EWCT','data_mode',char('R'));
                ncwriteatt(ncFiles(nc_idx).name,'NSCT','long_name',char('South-north current component'));
                ncwriteatt(ncFiles(nc_idx).name,'NSCT','coordinates',char('TIME DEPH LATITUDE LONGITUDE'));
                ncwriteatt(ncFiles(nc_idx).name,'NSCT','data_mode',char('R'));
                if(contains(sensorATT,'codar','IgnoreCase',true))
                    ncwriteatt(ncFiles(nc_idx).name,'ESPC','long_name',char('Radial standard deviation of current velocity over the scatter patch'));
                    ncwriteatt(ncFiles(nc_idx).name,'ESPC','standard_name',char(''));
                    ncwriteatt(ncFiles(nc_idx).name,'ESPC','coordinates',char('TIME DEPH LATITUDE LONGITUDE'));
                    ncwriteatt(ncFiles(nc_idx).name,'ESPC','data_mode',char('R'));
                    ncwriteatt(ncFiles(nc_idx).name,'ETMP','long_name',char('Radial standard deviation of current velocity over coverage period'));
                    ncwriteatt(ncFiles(nc_idx).name,'ETMP','standard_name',char(''));
                    ncwriteatt(ncFiles(nc_idx).name,'ETMP','coordinates',char('TIME DEPH LATITUDE LONGITUDE'));
                    ncwriteatt(ncFiles(nc_idx).name,'ETMP','data_mode',char('R'));
                    ncwriteatt(ncFiles(nc_idx).name,'MINV','long_name',char('Radial sea water velocity away from instrument minimum'));
                    ncwriteatt(ncFiles(nc_idx).name,'MINV','standard_name',char(''));
                    ncwriteatt(ncFiles(nc_idx).name,'MINV','coordinates',char('TIME DEPH LATITUDE LONGITUDE'));
                    ncwriteatt(ncFiles(nc_idx).name,'MINV','data_mode',char('R'));
                    ncwriteatt(ncFiles(nc_idx).name,'MAXV','long_name',char('Radial sea water velocity away from instrument maximum'));
                    ncwriteatt(ncFiles(nc_idx).name,'MAXV','standard_name',char(''));
                    ncwriteatt(ncFiles(nc_idx).name,'MAXV','coordinates',char('TIME DEPH LATITUDE LONGITUDE'));
                    ncwriteatt(ncFiles(nc_idx).name,'MAXV','data_mode',char('R'));
                    ncwriteatt(ncFiles(nc_idx).name,'ERSC','long_name',char('Radial sea water velocity spatial quality count'));
                    ncwriteatt(ncFiles(nc_idx).name,'ERSC','standard_name',char(''));
                    ncwriteatt(ncFiles(nc_idx).name,'ERSC','coordinates',char('TIME DEPH LATITUDE LONGITUDE'));
                    ncwriteatt(ncFiles(nc_idx).name,'ERSC','data_mode',char('R'));
                    ncwriteatt(ncFiles(nc_idx).name,'ERTC','long_name',char('Radial sea water velocity temporal quality count'));
                    ncwriteatt(ncFiles(nc_idx).name,'ERTC','standard_name',char(''));
                    ncwriteatt(ncFiles(nc_idx).name,'ERTC','coordinates',char('TIME DEPH LATITUDE LONGITUDE'));
                    ncwriteatt(ncFiles(nc_idx).name,'ERTC','data_mode',char('R'));
                    ncwriteatt(ncFiles(nc_idx).name,'XDST','long_name',char('Eastward distance from instrument'));
                    ncwriteatt(ncFiles(nc_idx).name,'XDST','standard_name',char(''));
                    ncwriteatt(ncFiles(nc_idx).name,'XDST','coordinates',char('LATITUDE LONGITUDE'));
                    ncwriteatt(ncFiles(nc_idx).name,'XDST','data_mode',char('R'));
                    ncwriteatt(ncFiles(nc_idx).name,'YDST','long_name',char('Northward distance from instrument'));
                    ncwriteatt(ncFiles(nc_idx).name,'YDST','standard_name',char(''));
                    ncwriteatt(ncFiles(nc_idx).name,'YDST','coordinates',char('LATITUDE LONGITUDE'));
                    ncwriteatt(ncFiles(nc_idx).name,'YDST','data_mode',char('R'));
                    ncwriteatt(ncFiles(nc_idx).name,'SPRC','long_name',char('Radial sea water velocity cross spectra range cell'));
                    ncwriteatt(ncFiles(nc_idx).name,'SPRC','standard_name',char(''));
                    ncwriteatt(ncFiles(nc_idx).name,'SPRC','coordinates',char('TIME DEPH LATITUDE LONGITUDE'));
                    ncwriteatt(ncFiles(nc_idx).name,'SPRC','data_mode',char('R'));
                elseif(contains(sensorATT,'wera','IgnoreCase',true))
                    ncwriteatt(ncFiles(nc_idx).name,'HCSS','long_name',char('Radial variance of current velocity over coverage period'));
                    ncwriteatt(ncFiles(nc_idx).name,'HCSS','standard_name',char(''));
                    ncwriteatt(ncFiles(nc_idx).name,'HCSS','coordinates',char('TIME DEPH LATITUDE LONGITUDE'));
                    ncwriteatt(ncFiles(nc_idx).name,'HCSS','data_mode',char('R'));
                    ncwriteatt(ncFiles(nc_idx).name,'EACC','long_name',char('Radial accuracy of current velocity over coverage period'));
                    ncwriteatt(ncFiles(nc_idx).name,'EACC','standard_name',char(''));
                    ncwriteatt(ncFiles(nc_idx).name,'EACC','coordinates',char('TIME DEPH LATITUDE LONGITUDE'));
                    ncwriteatt(ncFiles(nc_idx).name,'EACC','data_mode',char('R'));
                end
                ncwriteatt(ncFiles(nc_idx).name,'TIME_QC','long_name',char('Time quality flag'));
                ncwriteatt(ncFiles(nc_idx).name,'TIME_QC','conventions',char('Copernicus Marine In Situ reference table 2'));
                ncwriteatt(ncFiles(nc_idx).name,'POSITION_QC','long_name',char('Position quality flag'));
                ncwriteatt(ncFiles(nc_idx).name,'POSITION_QC','conventions',char('Copernicus Marine In Situ reference table 2'));
                ncwriteatt(ncFiles(nc_idx).name,'POSITION_QC','coordinates',char('TIME DEPH LATITUDE LONGITUDE'));
                ncwriteatt(ncFiles(nc_idx).name,'DEPH_QC','long_name',char('Depth quality flag'));
                ncwriteatt(ncFiles(nc_idx).name,'DEPH_QC','conventions',char('Copernicus Marine In Situ reference table 2'));
                ncwriteatt(ncFiles(nc_idx).name,'QCflag','long_name',char('Overall quality flag'));
                ncwriteatt(ncFiles(nc_idx).name,'QCflag','conventions',char('Copernicus Marine In Situ reference table 2'));
                ncwriteatt(ncFiles(nc_idx).name,'QCflag','coordinates',char('TIME DEPH LATITUDE LONGITUDE'));
                ncwriteatt(ncFiles(nc_idx).name,'OWTR_QC','long_name',char('Over-water quality flag'));
                ncwriteatt(ncFiles(nc_idx).name,'OWTR_QC','flag_meanings',char('no_qc_performed good_data probably_good_data bad_data_that_are_potentially_correctable bad_data value_changed not_used nominal_value interpolated_value missing_value'));
                ncwriteatt(ncFiles(nc_idx).name,'OWTR_QC','conventions',char('Copernicus Marine In Situ reference table 2'));
                ncwriteatt(ncFiles(nc_idx).name,'OWTR_QC','coordinates',char('TIME DEPH LATITUDE LONGITUDE'));
                ncwriteatt(ncFiles(nc_idx).name,'MDFL_QC','long_name',char('Median filter quality flag'));
                ncwriteatt(ncFiles(nc_idx).name,'MDFL_QC','flag_meanings',char('no_qc_performed good_data probably_good_data bad_data_that_are_potentially_correctable bad_data value_changed not_used nominal_value interpolated_value missing_value'));
                ncwriteatt(ncFiles(nc_idx).name,'MDFL_QC','conventions',char('Copernicus Marine In Situ reference table 2'));
                ncwriteatt(ncFiles(nc_idx).name,'MDFL_QC','coordinates',char('TIME DEPH LATITUDE LONGITUDE'));
                ncwriteatt(ncFiles(nc_idx).name,'VART_QC','long_name',char('Variance threshold quality flag'));
                ncwriteatt(ncFiles(nc_idx).name,'VART_QC','conventions',char('Copernicus Marine In Situ reference table 2'));
                ncwriteatt(ncFiles(nc_idx).name,'VART_QC','coordinates',char('TIME DEPH LATITUDE LONGITUDE'));
                ncwriteatt(ncFiles(nc_idx).name,'CSPD_QC','long_name',char('Velocity threshold quality flag'));
                ncwriteatt(ncFiles(nc_idx).name,'CSPD_QC','conventions',char('Copernicus Marine In Situ reference table 2'));
                ncwriteatt(ncFiles(nc_idx).name,'CSPD_QC','coordinates',char('TIME DEPH LATITUDE LONGITUDE'));
                ncwriteatt(ncFiles(nc_idx).name,'AVRB_QC','long_name',char('Average radial bearing quality flag'));
                ncwriteatt(ncFiles(nc_idx).name,'AVRB_QC','conventions',char('Copernicus Marine In Situ reference table 2'));
                ncwriteatt(ncFiles(nc_idx).name,'RDCT_QC','long_name',char('Radial count quality flag'));
                ncwriteatt(ncFiles(nc_idx).name,'RDCT_QC','conventions',char('Copernicus Marine In Situ reference table 2'));
                ncwriteatt(ncFiles(nc_idx).name,'NARX','long_name',char('Number of receive antennas'));
                ncwriteatt(ncFiles(nc_idx).name,'NARX','standard_name',char(''));
                ncwriteatt(ncFiles(nc_idx).name,'NARX','valid_min',int8(0));
                ncwriteatt(ncFiles(nc_idx).name,'NARX','valid_max',int8(127));
                ncwriteatt(ncFiles(nc_idx).name,'NARX','data_mode',char('R'));
                ncwriteatt(ncFiles(nc_idx).name,'NATX','long_name',char('Number of transmit antennas'));
                ncwriteatt(ncFiles(nc_idx).name,'NATX','standard_name',char(''));
                ncwriteatt(ncFiles(nc_idx).name,'NATX','valid_min',int8(0));
                ncwriteatt(ncFiles(nc_idx).name,'NATX','valid_max',int8(128));
                ncwriteatt(ncFiles(nc_idx).name,'NATX','data_mode',char('R'));
                ncwriteatt(ncFiles(nc_idx).name,'SLTR','long_name',char('Receive antenna latitudes'));
                ncwriteatt(ncFiles(nc_idx).name,'SLTR','standard_name',char('latitude'));
                ncwriteatt(ncFiles(nc_idx).name,'SLTR','valid_min',int32((-90-ncreadatt(ncFiles(nc_idx).name,'SLTR','add_offset'))./ncreadatt(ncFiles(nc_idx).name,'SLTR','scale_factor')));
                ncwriteatt(ncFiles(nc_idx).name,'SLTR','valid_max',int32((90-ncreadatt(ncFiles(nc_idx).name,'SLTR','add_offset'))./ncreadatt(ncFiles(nc_idx).name,'SLTR','scale_factor')));
                ncwriteatt(ncFiles(nc_idx).name,'SLTR','units','degree_north');
                ncwriteatt(ncFiles(nc_idx).name,'SLTR','data_mode',char('R'));
                ncwriteatt(ncFiles(nc_idx).name,'SLNR','long_name',char('Receive antenna longitudes'));
                ncwriteatt(ncFiles(nc_idx).name,'SLNR','standard_name',char('longitude'));
                ncwriteatt(ncFiles(nc_idx).name,'SLNR','valid_min',int32((-180-ncreadatt(ncFiles(nc_idx).name,'SLNR','add_offset'))./ncreadatt(ncFiles(nc_idx).name,'SLNR','scale_factor')));
                ncwriteatt(ncFiles(nc_idx).name,'SLNR','valid_max',int32((180-ncreadatt(ncFiles(nc_idx).name,'SLNR','add_offset'))./ncreadatt(ncFiles(nc_idx).name,'SLNR','scale_factor')));
                ncwriteatt(ncFiles(nc_idx).name,'SLNR','units','degree_east');
                ncwriteatt(ncFiles(nc_idx).name,'SLNR','data_mode',char('R'));
                ncwriteatt(ncFiles(nc_idx).name,'SLTT','long_name',char('Transmit antenna latitudes'));
                ncwriteatt(ncFiles(nc_idx).name,'SLTT','standard_name',char('latitude'));
                ncwriteatt(ncFiles(nc_idx).name,'SLTT','valid_min',int32((-90-ncreadatt(ncFiles(nc_idx).name,'SLTT','add_offset'))./ncreadatt(ncFiles(nc_idx).name,'SLTT','scale_factor')));
                ncwriteatt(ncFiles(nc_idx).name,'SLTT','valid_max',int32((90-ncreadatt(ncFiles(nc_idx).name,'SLTT','add_offset'))./ncreadatt(ncFiles(nc_idx).name,'SLTT','scale_factor')));
                ncwriteatt(ncFiles(nc_idx).name,'SLTT','units','degree_north');
                ncwriteatt(ncFiles(nc_idx).name,'SLTT','data_mode',char('R'));
                ncwriteatt(ncFiles(nc_idx).name,'SLNT','long_name',char('Transmit antenna longitudes'));
                ncwriteatt(ncFiles(nc_idx).name,'SLNT','standard_name',char('longitude'));
                ncwriteatt(ncFiles(nc_idx).name,'SLNT','valid_min',int32((-180-ncreadatt(ncFiles(nc_idx).name,'SLNT','add_offset'))./ncreadatt(ncFiles(nc_idx).name,'SLNT','scale_factor')));
                ncwriteatt(ncFiles(nc_idx).name,'SLNT','valid_max',int32((180-ncreadatt(ncFiles(nc_idx).name,'SLNT','add_offset'))./ncreadatt(ncFiles(nc_idx).name,'SLNT','scale_factor')));
                ncwriteatt(ncFiles(nc_idx).name,'SLNT','units','degree_east');
                ncwriteatt(ncFiles(nc_idx).name,'SLNT','data_mode',char('R'));
                ncwriteatt(ncFiles(nc_idx).name,'SCDR','long_name',char('Receive antenna codes'));
                ncwriteatt(ncFiles(nc_idx).name,'SCDR','standard_name',char(''));
                ncwriteatt(ncFiles(nc_idx).name,'SCDR','data_mode',char('R'));
                ncwriteatt(ncFiles(nc_idx).name,'SCDT','long_name',char('Transmit antenna codes'));
                ncwriteatt(ncFiles(nc_idx).name,'SCDT','standard_name',char(''));
                ncwriteatt(ncFiles(nc_idx).name,'SCDT','data_mode',char('R'));
            end
            
            % Modify global attributes according to the NetCDF Format Manual v1.4
            ncwriteatt(ncFiles(nc_idx).name,'/','title',char("Global Ocean - In Situ Observation Copernicus"));
            ncwriteatt(ncFiles(nc_idx).name,'/','contact',char("euhfrnode@azti.es cmems-service@ifremer.fr"));
            ncwriteatt(ncFiles(nc_idx).name,'/','naming_authority',char("Copernicus Marine In Situ"));
            ncwriteatt(ncFiles(nc_idx).name,'/','cdm_data_type',char('grid'));
            ncwriteatt(ncFiles(nc_idx).name,'/','platform_name',char(platformCODE));
            ncwriteatt(ncFiles(nc_idx).name,'/','wmo_platform_code',char(''));
            ncwriteatt(ncFiles(nc_idx).name,'/','ices_platform_code',char(''));
            ncwriteatt(ncFiles(nc_idx).name,'/','format_version',char("1.4"));
            ncwriteatt(ncFiles(nc_idx).name,'/','netcdf_version',char('netCDF-4 classic model'));
            ncwriteatt(ncFiles(nc_idx).name,'/','Conventions',char("CF-1.6 Copernicus-InSituTAC-FormatManual-1.41 Copernicus-InSituTAC-SRD-1.5 Copernicus-InSituTAC-ParametersList-3.2.0"));
            ncwriteatt(ncFiles(nc_idx).name,'/','references',char('http://marine.copernicus.eu http://www.marineinsitu.eu http://www.marineinsitu.eu/wp-content/uploads/2018/02/HFR_Data_Model_Reference_Card_v1.pdf'));
            ncwriteatt(ncFiles(nc_idx).name,'/','bottom_depth', char(''));
            ncwriteatt(ncFiles(nc_idx).name,'/','doi',char(''));
            ncwriteatt(ncFiles(nc_idx).name,'/','pi_name',char(''));
            ncwriteatt(ncFiles(nc_idx).name,'/','qc_manual',char(''));
            ncwriteatt(ncFiles(nc_idx).name,'/','wmo_inst_type',char(''));
            ncwriteatt(ncFiles(nc_idx).name,'/','software_version',char('v2.2'));
            ncwriteatt(ncFiles(nc_idx).name,'/','software_name',char('HFR_Node__Centralized_Processing'));
            ncwriteatt(ncFiles(nc_idx).name,'/','institution_references',char(strrep(ncreadatt(ncFiles(nc_idx).name,'/','institution_reference'),'; ',' ')));
            ncid = netcdf.open(ncFiles(nc_idx).name, 'NC_WRITE');
            netcdf.reDef(ncid);
            netcdf.delAtt(ncid,netcdf.getConstant('GLOBAL'),'institution_reference');
            netcdf.endDef(ncid);
            netcdf.close(ncid);
            
            % Add _FillValue to DEPH variable
            status = system(['ncatted -O -a _FillValue,DEPH,o,f,9.96921E36 ' ncFiles(nc_idx).name]);
            
            % Update the date_update attribute
            ncwriteatt(ncFiles(nc_idx).name,'/','date_update',char([datestr(now, 'yyyy-mm-dd') 'T' datestr(now, 'HH:MM:SS') 'Z']));
            
            [filepath,name,ext] = fileparts(ncFiles(nc_idx).name);
            disp(['[' datestr(now) '] - - ' name ext ' successfully patched (' num2str(nc_idx) '/' num2str(length(ncFiles)) ')']);
            procStatus(nc_idx) = 1;
            
        catch err
            [filepath,name,ext] = fileparts(ncFiles(nc_idx).name);
            disp(['[' datestr(now) '] - - ERROR processing ' name ext ' -> ' err.message '(' num2str(nc_idx) '/' num2str(length(ncFiles)) ')' ]);
            EHNlc_err = 1;
        end
    end
    
    %%
    
    
catch err
    disp(['[' datestr(now) '] - - ERROR in ' mfilename ' -> ' err.message]);
    EHNlc_err = 1;
end

if (exist('out', 'dir') ~= 7)
    mkdir('out');
end
save('out/longNames.mat','ncFiles', 'procStatus');

disp(['[' datestr(now) '] - - Files successfully patched: ' num2str(sum(procStatus)) '/' num2str(length(ncFiles))]);

if(EHNlc_err==0)
    disp(['[' datestr(now) '] - - ' 'CP_EU_HFR_Node_lowercaseLongNames_ncPatch successfully executed.']);
else
    disp(['[' datestr(now) '] - - ' 'CP_EU_HFR_Node_lowercaseLongNames_ncPatch exited with an error.']);
end
