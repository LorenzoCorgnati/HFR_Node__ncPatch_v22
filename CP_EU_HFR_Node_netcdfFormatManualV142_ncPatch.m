%% CP_EU_HFR_Node_netcdfFormatManualV142_ncPatch.m
% This application patches all the radial and total netCDF generated by the
% EU HFR Node in order to comply with the CMEMS-INSTAC netCDF Format Manual
% v1.42.

% Author: Lorenzo Corgnati
% Date: December 20, 2021

% E-mail: lorenzo.corgnati@sp.ismar.cnr.it
%%

%% Setup

warning('off', 'all');

clear all
close all
clc

% Set the network name
networkID = 'HFR_COSYNA';

% Set the format version
format_version = 'v2.2';

% Setup the standard netCDF datafile folder
SBXfolder = ['/home/lorenz/Desktop/netCDF_patch/fooSBX/' networkID];    % test folder on local machine
OPTfolder = ['/home/lorenz/Desktop/netCDF_patch/fooOPT/' networkID];         % test folder on local machine
% SBXfolder = ['/home/radarcombine/EU_HFR_NODE/' networkID];
% OPTfolder = ['/home/radarcombine/OPERATIONAL/' networkID];

EHNlc_err = 0;

disp(['[' datestr(now) '] - - ' 'CP_EU_HFR_Node_netcdfFormatManualV142_ncPatch started.']);

%%

%% Rsync data from OPERATIONAL to SANDBOX
try
    % rsync radial data
    status = system(['rsync -rltvz --stats --progress --human-readable ' OPTfolder '/Radials_nc/' format_version '/ ' SBXfolder '/Radials_nc/' format_version '/']);
    if(status~=0)
        EHNlc_err = 1;
    end
    % rsync total data
    status = system(['rsync -rltvz --stats --progress --human-readable ' OPTfolder '/Totals_nc/' format_version '/ ' SBXfolder '/Totals_nc/' format_version '/']);
    if(status~=0)
        EHNlc_err = 1;
    end
catch err
    disp(['[' datestr(now) '] - - ERROR in synchronizing files towards SANDBOX for ' networkID ' network -> ' err.message]);
    EHNlc_err = 1;
end

%%

try
    %% List the netCDF files to be patched
    
    % all files processing
    ncFiles = rdir([SBXfolder filesep '**' filesep '*_nc' filesep '**' filesep format_version filesep '**' filesep '*.nc']);
    
    disp(['[' datestr(now) '] - - ' 'File list retrieved (' num2str(length(ncFiles)) ' files to be patched).']);
    
    procStatus = zeros(length(ncFiles),1);
    
    %%
    
    %% Apply the patch
    for nc_idx=1:length(ncFiles)
        try
            % Check if the nc file is a radial or total data file and amend QC variable flag_meanings
            if(contains(ncFiles(nc_idx).folder,'Totals_nc'))
                ncwriteatt(ncFiles(nc_idx).name,'TIME_QC','flag_meanings',char('no_qc_performed good_data probably_good_data bad_data_that_are_potentially_correctable bad_data value_changed value_below_detection nominal_value interpolated_value missing_value'));                                
                ncwriteatt(ncFiles(nc_idx).name,'POSITION_QC','flag_meanings',char('no_qc_performed good_data probably_good_data bad_data_that_are_potentially_correctable bad_data value_changed value_below_detection nominal_value interpolated_value missing_value'));
                ncwriteatt(ncFiles(nc_idx).name,'DEPH_QC','flag_meanings',char('no_qc_performed good_data probably_good_data bad_data_that_are_potentially_correctable bad_data value_changed value_below_detection nominal_value interpolated_value missing_value'));
                ncwriteatt(ncFiles(nc_idx).name,'QCflag','flag_meanings',char('no_qc_performed good_data probably_good_data bad_data_that_are_potentially_correctable bad_data value_changed value_below_detection nominal_value interpolated_value missing_value'));
                ncwriteatt(ncFiles(nc_idx).name,'VART_QC','flag_meanings',char('no_qc_performed good_data probably_good_data bad_data_that_are_potentially_correctable bad_data value_changed value_below_detection nominal_value interpolated_value missing_value'));
                ncwriteatt(ncFiles(nc_idx).name,'GDOP_QC','flag_meanings',char('no_qc_performed good_data probably_good_data bad_data_that_are_potentially_correctable bad_data value_changed value_below_detection nominal_value interpolated_value missing_value'));
                ncwriteatt(ncFiles(nc_idx).name,'DDNS_QC','flag_meanings',char('no_qc_performed good_data probably_good_data bad_data_that_are_potentially_correctable bad_data value_changed value_below_detection nominal_value interpolated_value missing_value'));
                ncwriteatt(ncFiles(nc_idx).name,'CSPD_QC','flag_meanings',char('no_qc_performed good_data probably_good_data bad_data_that_are_potentially_correctable bad_data value_changed value_below_detection nominal_value interpolated_value missing_value'));
            elseif(contains(ncFiles(nc_idx).folder,'Radials_nc'))
                ncwriteatt(ncFiles(nc_idx).name,'TIME_QC','flag_meanings',char('no_qc_performed good_data probably_good_data bad_data_that_are_potentially_correctable bad_data value_changed value_below_detection nominal_value interpolated_value missing_value'));                                
                ncwriteatt(ncFiles(nc_idx).name,'POSITION_QC','flag_meanings',char('no_qc_performed good_data probably_good_data bad_data_that_are_potentially_correctable bad_data value_changed value_below_detection nominal_value interpolated_value missing_value'));
                ncwriteatt(ncFiles(nc_idx).name,'DEPH_QC','flag_meanings',char('no_qc_performed good_data probably_good_data bad_data_that_are_potentially_correctable bad_data value_changed value_below_detection nominal_value interpolated_value missing_value'));
                ncwriteatt(ncFiles(nc_idx).name,'QCflag','flag_meanings',char('no_qc_performed good_data probably_good_data bad_data_that_are_potentially_correctable bad_data value_changed value_below_detection nominal_value interpolated_value missing_value'));
                ncwriteatt(ncFiles(nc_idx).name,'OWTR_QC','flag_meanings',char('no_qc_performed good_data probably_good_data bad_data_that_are_potentially_correctable bad_data value_changed value_below_detection nominal_value interpolated_value missing_value'));
                ncwriteatt(ncFiles(nc_idx).name,'MDFL_QC','flag_meanings',char('no_qc_performed good_data probably_good_data bad_data_that_are_potentially_correctable bad_data value_changed value_below_detection nominal_value interpolated_value missing_value'));
                ncwriteatt(ncFiles(nc_idx).name,'VART_QC','flag_meanings',char('no_qc_performed good_data probably_good_data bad_data_that_are_potentially_correctable bad_data value_changed value_below_detection nominal_value interpolated_value missing_value'));
                ncwriteatt(ncFiles(nc_idx).name,'CSPD_QC','flag_meanings',char('no_qc_performed good_data probably_good_data bad_data_that_are_potentially_correctable bad_data value_changed value_below_detection nominal_value interpolated_value missing_value'));
                ncwriteatt(ncFiles(nc_idx).name,'AVRB_QC','flag_meanings',char('no_qc_performed good_data probably_good_data bad_data_that_are_potentially_correctable bad_data value_changed value_below_detection nominal_value interpolated_value missing_value'));
                ncwriteatt(ncFiles(nc_idx).name,'RDCT_QC','flag_meanings',char('no_qc_performed good_data probably_good_data bad_data_that_are_potentially_correctable bad_data value_changed value_below_detection nominal_value interpolated_value missing_value'));                
            end
            
            % Modify global attributes according to the NetCDF Format Manual v1.42
            ncwriteatt(ncFiles(nc_idx).name,'/','Conventions',char('CF-1.6 Copernicus-InSituTAC-FormatManual-1.42 Copernicus-InSituTAC-SRD-1.5 Copernicus-InSituTAC-ParametersList-3.2.1'));
            ncwriteatt(ncFiles(nc_idx).name,'/','qc_manual',char('Recommendation Report 2 on improved common procedures for HFR QC analysis http://dx.doi.org/10.25607/OBP-944'));
                        
            % Update the date_update attribute
            ncwriteatt(ncFiles(nc_idx).name,'/','date_update',char([datestr(now, 'yyyy-mm-dd') 'T' datestr(now, 'HH:MM:SS') 'Z']));
            
            [filepath,name,ext] = fileparts(ncFiles(nc_idx).name);
            disp(['[' datestr(now) '] - - ' name ext ' successfully patched (' num2str(nc_idx) '/' num2str(length(ncFiles)) ')']);
            procStatus(nc_idx) = 1;
            
        catch err
            [filepath,name,ext] = fileparts(ncFiles(nc_idx).name);
            disp(['[' datestr(now) '] - - ERROR processing ' name ext ' -> ' err.message '(' num2str(nc_idx) '/' num2str(length(ncFiles)) ')' ]);
            EHNlc_err = 1;
        end
    end
    
    %%
    
    
catch err
    disp(['[' datestr(now) '] - - ERROR in ' mfilename ' -> ' err.message]);
    EHNlc_err = 1;
end

%% Rsync data from SANDBOX to OPERATIONAL
try
    % rsync radial data
    status = system(['rsync -rltvz --stats --progress --human-readable ' SBXfolder '/Radials_nc/' format_version '/ ' OPTfolder '/Radials_nc/' format_version '/']);
    if(status~=0)
        EHNlc_err = 1;
    end
    % rsync total data
    status = system(['rsync -rltvz --stats --progress --human-readable ' SBXfolder '/Totals_nc/' format_version '/ ' OPTfolder '/Totals_nc/' format_version '/']);
    if(status~=0)
        EHNlc_err = 1;
    end
catch err
    disp(['[' datestr(now) '] - - ERROR in synchronizing files towards OPERATIONAL for ' networkID ' network -> ' err.message]);
    EHNlc_err = 1;
end

%%

if (exist('out', 'dir') ~= 7)
    mkdir('out');
end
save('out/longNames.mat','ncFiles', 'procStatus');

disp(['[' datestr(now) '] - - Files successfully patched: ' num2str(sum(procStatus)) '/' num2str(length(ncFiles))]);

if(EHNlc_err==0)
    disp(['[' datestr(now) '] - - ' 'CP_EU_HFR_Node_netcdfFormatManualV142_ncPatch successfully executed.']);
else
    disp(['[' datestr(now) '] - - ' 'CP_EU_HFR_Node_netcdfFormatManualV142_ncPatch exited with an error.']);
end
